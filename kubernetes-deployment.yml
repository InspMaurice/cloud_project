# Déploiement PostgreSQL
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-db
  template:
    metadata:
      labels:
        app: postgres-db
    spec:
      containers:
        - name: postgres
          image: postgres:latest
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: "carsdatabase"
            - name: POSTGRES_USER
              value: "userx"
            - name: POSTGRES_PASSWORD
              value: "RrOppY6%wCV!J0^!l@"
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
spec:
  selector:
    app: postgres-db
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
  type: ClusterIP
---
# Déploiement Backend FindCar
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-findcar
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend-findcar
  template:
    metadata:
      labels:
        app: backend-findcar
    spec:
      containers:
        - name: backend-findcar
          image: ton_nom_dockerhub/backend-findcar:v1
          ports:
            - containerPort: 5000
---
apiVersion: v1
kind: Service
metadata:
  name: backend-findcar
spec:
  selector:
    app: backend-findcar
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000
---
# Déploiement Backend Pollution
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-pollution
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend-pollution
  template:
    metadata:
      labels:
        app: backend-pollution
    spec:
      containers:
        - name: backend-pollution
          image: ton_nom_dockerhub/backend-pollution:v1
          ports:
            - containerPort: 5001
---
apiVersion: v1
kind: Service
metadata:
  name: backend-pollution
spec:
  selector:
    app: backend-pollution
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 5001
      targetPort: 5001
---
# Déploiement Frontend
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: ton_nom_dockerhub/frontend:v1
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
spec:
  selector:
    app: frontend
  type: NodePort
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
      nodePort: 30080
